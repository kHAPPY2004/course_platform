// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// user
model User {
  id          String          @id @default(cuid())
  name        String
  email       String          @unique
  phoneNumber String
  password    String
  sessions    Session[]
  purchases   UserPurchases[]
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model UserPurchases {
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  course     Course   @relation(fields: [courseId], references: [id])
  courseId   Int
  assignedAt DateTime @default(now())

  @@id([userId, courseId])
}

model Course {
  id             Int             @id @unique @default(autoincrement())
  appxCourseId   Int
  discordRoleId  String
  title          String
  imageUrl       String
  description    String
  openToEveryone Boolean         @default(false)
  slug           String
  // content        CourseContent[]
  purchasedBy    UserPurchases[]
}

// model CourseContent {
//   course    Course  @relation(fields: [courseId], references: [id])
//   courseId  Int
//   content   Content @relation(fields: [contentId], references: [id])
//   contentId Int

//   @@id([courseId, contentId])
// }

// model Content {
//   id               Int             @id @default(autoincrement())
//   type             String          @default("folder")
//   title            String
//   hidden           Boolean         @default(false)
//   description      String?
//   thumbnail        String?
//   parentId         Int?
//   parent           Content?        @relation("ContentToContent", fields: [parentId], references: [id])
//   // videoProgress    VideoProgress[]
//   children         Content[]       @relation("ContentToContent")
//   courses          CourseContent[]
//   createdAt        DateTime        @default(now())
//   // VideoMetadata    VideoMetadata?
//   // NotionMetadata   NotionMetadata?
//   notionMetadataId Int?
//   // comments         Comment[]
//   commentsCount    Int             @default(0)
// }
